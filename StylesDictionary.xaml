<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="NormalButtonBrush" Color="#424242"/>
    <SolidColorBrush x:Key="NormalBackgroundBrush" Color="#D8D8D8"/>
    <SolidColorBrush x:Key="HoverButtonBrush" Color="#424242"/>
    <SolidColorBrush x:Key="PressedBrush" Color="#AAAAAA"/>
    <SolidColorBrush x:Key="HoverBackgroundBrush" Color="#CACACA"/>
    <Style x:Key="HoverButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource NormalButtonBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="HoverButtonBorder" BorderThickness="0.25" CornerRadius="1.5" BorderBrush="#FFCACACA" Background="{StaticResource NormalBackgroundBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HoverButtonBorder" Property="BorderBrush" Value="{StaticResource HoverButtonBrush}" />
                            <Setter TargetName="HoverButtonBorder" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource HoverButtonBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HoverButtonBorder" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AddTabButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource NormalButtonBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="AddTabButtonBorder" BorderBrush="#FFCACACA" Background="{StaticResource NormalBackgroundBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="AddTabButtonBorder" Property="BorderBrush" Value="{StaticResource HoverButtonBrush}" />
                            <Setter TargetName="AddTabButtonBorder" Property="Background" Value="{StaticResource HoverBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource HoverButtonBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="AddTabButtonBorder" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReloadBtn" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource NormalButtonBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                            Name="ReloadBtnBorder"
                            BorderThickness="0,1,1,1"
                            CornerRadius="0 3 3 0"
                            BorderBrush="#FF7D8683"
                            Background="#FFDEDEDE">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Image}">
        <Setter Property="RenderOptions.BitmapScalingMode" Value="Unspecified" />
    </Style>
    <Style x:Key="watermarkTextbox" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border Background="#FFDEDEDE" BorderBrush="#FF7D8683" BorderThickness="1"/>
                        <ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0" VerticalAlignment="Center" />
                        <Label Margin="5,0,0,-2" x:Name="WaterMarkLabel" FontSize="12" Content="{TemplateBinding Tag}" VerticalAlignment="Center"
                               Visibility="Collapsed" Foreground="Gray" FontFamily="Arial"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="DimGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>